{"version":3,"sources":["components/Form/Form.module.css","components/Form/Form.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Form","state","name","number","onInputChange","e","currentTarget","value","setState","onFormSubmit","preventDefault","console","log","props","onSubmit","reset","inputNameId","shortid","generate","inputNumberId","this","className","s","container","htmlFor","label","type","id","onChange","button","Component","ContactList","items","onDeleteContact","map","list","text","onClick","App","contacts","submitFormHandler","data","contact","prevState","deleteContact","contactId","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,MAAQ,oBAAoB,OAAS,uB,uKCItEC,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,cAAgB,SAACC,GAAO,IAAD,EACGA,EAAEC,cAAlBJ,EADa,EACbA,KAAMK,EADO,EACPA,MACd,EAAKC,SAAL,eACGN,EAAOK,K,EAIZE,aAAe,SAACJ,GACdA,EAAEK,iBACFC,QAAQC,IAAI,EAAKX,OACjB,EAAKY,MAAMC,SAAS,EAAKb,OACzB,EAAKc,S,EAGPA,MAAQ,WACN,EAAKP,SAAS,CACZN,KAAM,GACNC,OAAQ,M,uDAKV,IAAMa,EAAcC,IAAQC,WACtBC,EAAgBF,IAAQC,WAE9B,OACE,cAAC,WAAD,UACE,uBAAMJ,SAAUM,KAAKX,aAArB,UACE,sBAAKY,UAAWC,IAAEC,UAAlB,UACE,uBAAOC,QAASR,EAAaK,UAAWC,IAAEG,MAA1C,kBAGA,uBACEC,KAAK,OACLxB,KAAK,OACLyB,GAAIX,EACJT,MAAOa,KAAKnB,MAAMC,KAClB0B,SAAUR,KAAKhB,mBAInB,sBAAKiB,UAAWC,IAAEC,UAAlB,UACE,uBAAOC,QAASL,EAAeE,UAAWC,IAAEG,MAA5C,oBAGA,uBACEC,KAAK,MACLxB,KAAK,SACLyB,GAAIR,EACJZ,MAAOa,KAAKnB,MAAME,OAClByB,SAAUR,KAAKhB,mBAInB,wBAAQsB,KAAK,SAASL,UAAWC,IAAEO,OAAnC,kC,GA5DwBC,a,gBCFnB,SAASC,EAAT,GAAkD,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,gBAC3C,OACE,6BACGD,EAAME,KAAI,gBAAGhC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQwB,EAAjB,EAAiBA,GAAjB,OACT,qBAAaN,UAAWC,IAAEa,KAA1B,UACE,oBAAGd,UAAWC,IAAEc,KAAhB,UACGlC,EADH,MACYC,KAEZ,wBACEkB,UAAWC,IAAEO,OACbH,KAAK,SACLW,QAAS,kBAAMJ,EAAgBN,IAHjC,sBAJOA,Q,ICDIW,E,4MACnBrC,MAAQ,CACNsC,SAAU,I,EAeZC,kBAAoB,SAACC,GACnB9B,QAAQC,IAAI6B,GACZ,IAAMC,EAAU,CACdf,GAAIV,IAAQC,WACZhB,KAAMuC,EAAKvC,KACXC,OAAQsC,EAAKtC,QAEf,EAAKK,UAAS,SAACmC,GAAD,MAAgB,CAC5BJ,SAAS,GAAD,mBAAMI,EAAUJ,UAAhB,CAA0BG,S,EAItCE,cAAgB,SAACC,GACf,EAAKrC,UAAS,SAACmC,GAAD,MAAgB,CAC5BJ,SAAUI,EAAUJ,SAASO,QAC3B,SAACJ,GAAD,OAAaA,EAAQf,KAAOkB,U,uDAKxB,IACAN,EAAanB,KAAKnB,MAAlBsC,SAGR,OACE,eAAC,WAAD,WACE,2CAEA,cAAC,EAAD,CAAMzB,SAAUM,KAAKoB,oBAErB,0CACA,cAACT,EAAD,CAAaC,MAAOO,EAAUN,gBAAiBb,KAAKwB,uB,GAhD3Bd,aCAjCiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BrD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,+B","file":"static/js/main.c2ede8c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__3g3DQ\",\"label\":\"Form_label__3cJnl\",\"button\":\"Form_button__1aCuO\"};","import React, { Component, Fragment } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Form.module.css\";\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  onInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const inputNameId = shortid.generate();\r\n    const inputNumberId = shortid.generate();\r\n\r\n    return (\r\n      <Fragment>\r\n        <form onSubmit={this.onFormSubmit}>\r\n          <div className={s.container}>\r\n            <label htmlFor={inputNameId} className={s.label}>\r\n              Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id={inputNameId}\r\n              value={this.state.name}\r\n              onChange={this.onInputChange}\r\n            />\r\n          </div>\r\n\r\n          <div className={s.container}>\r\n            <label htmlFor={inputNumberId} className={s.label}>\r\n              Number\r\n            </label>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              id={inputNumberId}\r\n              value={this.state.number}\r\n              onChange={this.onInputChange}\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className={s.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nexport default function ContactList({ items, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {items.map(({ name, number, id }) => (\r\n        <li key={id} className={s.list}>\r\n          <p className={s.text}>\r\n            {name} : {number}\r\n          </p>\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n      id: PropTypes.string,\r\n      onDeleteContact: PropTypes.func,\r\n    })\r\n  ),\r\n};\r\n","import React, { Component } from \"react\";\nimport { Fragment } from \"react\";\nimport shortid from \"shortid\";\nimport Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n  };\n\n  // onInputChange = (e) => {\n  //   const { name, value } = e.currentTarget;\n  //   this.setState({\n  //     [name]: value,\n  //   });\n  // };\n\n  // onFormSubmit = (e) => {\n  //   e.preventDefault();\n  //   console.log(this.state);\n  // };\n\n  submitFormHandler = (data) => {\n    console.log(data);\n    const contact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { contacts } = this.state;\n    // const inputNameId = shortid.generate();\n    // const inputNumberId = shortid.generate();\n    return (\n      <Fragment>\n        <h1>Phonebook</h1>\n\n        <Form onSubmit={this.submitFormHandler} />\n\n        <h2>Contacts</h2>\n        <ContactList items={contacts} onDeleteContact={this.deleteContact} />\n      </Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Jqo4\",\"text\":\"ContactList_text__3nHjQ\",\"button\":\"ContactList_button__1GCIv\"};"],"sourceRoot":""}