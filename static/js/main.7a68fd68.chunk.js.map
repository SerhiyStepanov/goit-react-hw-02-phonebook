{"version":3,"sources":["components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["ContactList","items","onDeleteContact","map","name","number","id","className","s","list","text","button","type","onClick","App","state","contacts","onInputChange","e","currentTarget","value","setState","onFormSubmit","preventDefault","console","log","deleteContact","contactId","prevState","filter","contact","this","inputNameId","shortid","generate","inputNumberId","onSubmit","htmlFor","onChange","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mSAGe,SAASA,EAAT,GAAkD,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,gBAC3C,OACE,6BACGD,EAAME,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OACT,qBAAaC,UAAWC,IAAEC,KAA1B,UACE,oBAAGF,UAAWC,IAAEE,KAAhB,UACGN,EADH,MACYC,KAEZ,wBACEE,UAAWC,IAAEG,OACbC,KAAK,SACLC,QAAS,kBAAMX,EAAgBI,IAHjC,sBAJOA,Q,ICDIQ,E,4MACnBC,MAAQ,CACNC,SAAU,GAiBVZ,KAAM,GACNC,OAAQ,I,EAGVY,cAAgB,SAACC,GAAO,IAAD,EACGA,EAAEC,cAAlBf,EADa,EACbA,KAAMgB,EADO,EACPA,MACd,EAAKC,SAAL,eACGjB,EAAOgB,K,EAIZE,aAAe,SAACJ,GACdA,EAAEK,iBACFC,QAAQC,IAAI,EAAKV,Q,EAGnBW,cAAgB,SAACC,GACf,EAAKN,UAAS,SAACO,GAAD,MAAgB,CAC5BZ,SAAUY,EAAUZ,SAASa,QAC3B,SAACC,GAAD,OAAaA,EAAQxB,KAAOqB,U,uDAKxB,IACAX,EAAae,KAAKhB,MAAlBC,SACFgB,EAAcC,IAAQC,WACtBC,EAAgBF,IAAQC,WAC9B,OACE,eAAC,WAAD,WACE,2CACA,uBAAME,SAAUL,KAAKT,aAArB,UACE,uBAAOe,QAASL,EAAhB,kBACA,uBACEpB,KAAK,OACLR,KAAK,OACLE,GAAI0B,EACJZ,MAAOW,KAAKhB,MAAMX,KAClBkC,SAAUP,KAAKd,gBAGjB,uBAAOoB,QAASF,EAAhB,oBACA,uBACEvB,KAAK,MACLR,KAAK,SACLE,GAAI6B,EACJf,MAAOW,KAAKhB,MAAMV,OAClBiC,SAAUP,KAAKd,gBAGjB,wBAAQL,KAAK,SAAb,4BAEF,0CACA,cAACZ,EAAD,CAAaC,MAAOe,EAAUd,gBAAiB6B,KAAKL,uB,GAxE3Ba,aCAjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,+B","file":"static/js/main.7a68fd68.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nexport default function ContactList({ items, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {items.map(({ name, number, id }) => (\r\n        <li key={id} className={s.list}>\r\n          <p className={s.text}>\r\n            {name} : {number}\r\n          </p>\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n      id: PropTypes.string,\r\n      onDeleteContact: PropTypes.func,\r\n    })\r\n  ),\r\n};\r\n","// import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Fragment } from \"react\";\nimport shortid from \"shortid\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      // {\n      //   id: shortid.generate(),\n      //   name: \"Anna\",\n      //   number: \"333\",\n      // },\n      // {\n      //   id: shortid.generate(),\n      //   name: \"Serhiy\",\n      //   number: \"555\",\n      // },\n      // {\n      //   id: shortid.generate(),\n      //   name: \"Tanja\",\n      //   number: \"999\",\n      // },\n    ],\n    name: \"\",\n    number: \"\",\n  };\n\n  onInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { contacts } = this.state;\n    const inputNameId = shortid.generate();\n    const inputNumberId = shortid.generate();\n    return (\n      <Fragment>\n        <h1>Phonebook</h1>\n        <form onSubmit={this.onFormSubmit}>\n          <label htmlFor={inputNameId}>Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id={inputNameId}\n            value={this.state.name}\n            onChange={this.onInputChange}\n          />\n\n          <label htmlFor={inputNumberId}>Number</label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={inputNumberId}\n            value={this.state.number}\n            onChange={this.onInputChange}\n          />\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n        <h2>Contacts</h2>\n        <ContactList items={contacts} onDeleteContact={this.deleteContact} />\n      </Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Jqo4\",\"text\":\"ContactList_text__3nHjQ\",\"button\":\"ContactList_button__1GCIv\"};"],"sourceRoot":""}